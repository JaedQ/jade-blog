# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build and Deploy to Shared Hosting Job
  build-and-deploy-to-shared-hosting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          cache-version: 0

      - name: Update Bundler
        run: gem update --system

      - name: Set Bundler Platform
        run: bundle config --local platform x86_64-linux

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: jekyll-site
          path: _site/

      - name: Deploy to Ronins Server using Rsync
        uses: burnett01/rsync-deployments@6.0.0
        with:
          switches: -avziO
          path: _site/
          remote_path: ${{ secrets.REMOTE_DEPLOYMENT_DIR }}
          remote_host: ${{ secrets.REMOTE_HOST }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY_MC }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.build-and-deploy-to-shared-hosting.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-and-deploy-to-shared-hosting
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
